//
// Created by Nima on 4/6/15.
// Copyright (c) 2015 Builds, Inc. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>
#import <CoreGraphics/CoreGraphics.h>
#import "IMImojiObjectRenderingOptions.h"

@class IMImojiObject, IMImojiSessionStoragePolicy;

/**
* @abstract The error domain used within NSError objects generated by IMImojiSession
*/
extern NSString *IMImojiSessionErrorDomain;

typedef NS_ENUM(NSUInteger, IMImojiSessionErrorCode) {
    /**
    * @abstract Used when the supplied client id and api token are not recognized by the server
    */
    IMImojiSessionErrorCodeInvalidCredentials,
    /**
    * @abstract Used as a fallback when the server returns an error and no other specific error code exists
    */
    IMImojiSessionErrorCodeServerError,
    /**
    * @abstract Used when the consumer supplies a corrupt IMImojiObject to IMImojiSession for rendering
    */
    IMImojiSessionErrorCodeImojiDoesNotExist,
    /**
    * @abstract Used whenever the consumer sends a bad argument to any method in IMImojiSession
    */
    IMImojiSessionErrorCodeInvalidArgument,
    /**
    * @abstract Used when IMImojiSession is unable to render the IMImojiObject to a UIImage
    */
    IMImojiSessionErrorCodeInvalidImage
};

/**
* DEPRECATED: See IMImojiObjectRenderingOptions
*/
typedef NS_ENUM(NSUInteger, IMImojiObjectRenderQuality) {
    /**
    * @abstract When used, a compressed version of the Imoji is downloaded and rendered. This setting is useful when
    * the consumer wishes to load and display multiple imojis as fast as possible. Sizes of the thumbnail imojis vary
    * but do not exceed 150x150 pixels
    */
    IMImojiObjectRenderQualityThumbnail,
    /**
    * @abstract When used, a high resolution image of the Imoji is downloaded and rendered. This setting is useful when
    * the consumer wishes to export the imoji to another application or simply display a large version of it.
    */
    IMImojiObjectRenderQualityFullResolution
} __deprecated;

typedef void (^IMImojiSessionSearchResponseCallback)(NSNumber *resultCount, NSError *error);

typedef void (^IMImojiSessionImojiFetchedResponseCallback)(IMImojiObject *imoji, NSUInteger index, NSError *error);

typedef void (^IMImojiSessionImojiCategoriesResponseCallback)(NSArray *imojiCategories, NSError *error);

typedef void (^IMImojiSessionImojiRenderResponseCallback)(UIImage *image, NSError *error);


@interface IMImojiSession : NSObject

/**
* @abstract Creates a imoji session object.
* @param storagePolicy The storage policy to use for persisting imojis.
*/
- (instancetype)initWithStoragePolicy:(IMImojiSessionStoragePolicy *)storagePolicy;

/**
* @abstract Creates a imoji session object with a default temporary file system storage policy.
*/
+ (instancetype)imojiSession;

/**
* @abstract Creates a imoji session object.
* @param storagePolicy The storage policy to use for persisting imojis.
*/
+ (instancetype)imojiSessionWithStoragePolicy:(IMImojiSessionStoragePolicy *)storagePolicy;

@end

@interface IMImojiSession (ImojiFetching)

/**
* @abstract Fetches top level imoji categories.
* @param callback Block callback to call when categories have been downloaded.
* @return An operation reference that can be used to cancel the request.
*/
- (NSOperation *)getImojiCategories:(IMImojiSessionImojiCategoriesResponseCallback)callback;

/**
* @abstract Searches the imojis database with a given search term. The searchResponseCallback block is called once the results are available.
* Imojis contents are downloaded individually and imojiResponseCallback is called once the thumbnail of that imoji has been downloaded.
* @param searchTerm Search term to find imojis with. If nil or empty, the server will typically returned the featured set of imojis (this is subject to change).
* @param offset The result offset from a previous search. This may be nil.
* @param numberOfResults Number of results to fetch. This can be nil.
* @return An operation reference that can be used to cancel the request.
*/
- (NSOperation *)searchImojisWithTerm:(NSString *)searchTerm
                               offset:(NSNumber *)offset
                      numberOfResults:(NSNumber *)numberOfResults
               searchResponseCallback:(IMImojiSessionSearchResponseCallback)searchResponseCallback
                imojiResponseCallback:(IMImojiSessionImojiFetchedResponseCallback)imojiResponseCallback;

/**
* @abstract Gets a random set of featured imojis. The searchResponseCallback block is called once the results are available.
* Imojis contents are downloaded individually and imojiResponseCallback is called once the thumbnail of that imoji has been downloaded.
* @param numberOfResults Number of results to fetch. This can be nil.
* @return An operation reference that can be used to cancel the request.
*/
- (NSOperation *)getFeaturedImojisWithNumberOfResults:(NSNumber *)numberOfResults
                               searchResponseCallback:(IMImojiSessionSearchResponseCallback)searchResponseCallback
                                imojiResponseCallback:(IMImojiSessionImojiFetchedResponseCallback)imojiResponseCallback;

/**
* @abstract Gets corresponding IMImojiObject's for one or more imoji identifiers as NSString's
* Imojis contents are downloaded individually and fetchedResponseCallback is called once the thumbnail of that imoji has been downloaded.
* @return An operation reference that can be used to cancel the request.
*/
- (NSOperation *)fetchImojisByIdentifiers:(NSArray *)imojiObjectIdentifiers
                  fetchedResponseCallback:(IMImojiSessionImojiFetchedResponseCallback)fetchedResponseCallback;

@end


@interface IMImojiSession (ImojiDisplaying)

/**
* DEPRECATED: Use renderImoji:options:callback instead
*
* @abstract Renders an imoji object into a image with a white border.
* The border widths and shadow size are scaled proportionally to the size of the image.
* @param imoji The imoji to render.
* @param quality The desired quality of the image to load.
* @param callback Called once the imoji UIImage has been rendered
* @return An operation reference that can be used to cancel the request.
*/
- (NSOperation *)renderImoji:(IMImojiObject *)imoji
                     quality:(IMImojiObjectRenderQuality)quality
                    callback:(IMImojiSessionImojiRenderResponseCallback)callback __deprecated;

/**
* @abstract Renders an imoji object into a image with a specified border and shadow. The imoji image is scaled to fit the specified target size.
* @param imoji The imoji to render.
* @param options Set of options to render the imoji with
* @param callback Called once the imoji UIImage has been rendered
* @return An operation reference that can be used to cancel the request.
*/
- (NSOperation *)renderImoji:(IMImojiObject *)imoji
                     options:(IMImojiObjectRenderingOptions *)options
                    callback:(IMImojiSessionImojiRenderResponseCallback)callback;

@end
